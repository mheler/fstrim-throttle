usage: nice_trim.py [-h] [-a] [-c CHUNK_SIZE] [-s SLEEP_RANGE] [-m MIN_EXTENT]
                    [-n] [-v]
                    [mount [mount ...]]

A wrap of fstrim. It runs fstrim in chunks and sleep in between. The valid
human readable format includes KiB, MiB, GiB, TiB, KB, MB, GB, and TB. The log
file is at "/var/log/nice_trim.log"

positional arguments:
  mount                 Mount points we are trimming (default: None)

optional arguments:
  -h, --help            show this help message and exit
  -a, --all             this overrides any mount point (default: False)
  -c CHUNK_SIZE, --chunk-size CHUNK_SIZE
                        The number of bytes to search for free blocks to
                        discard. (default: 4GiB)
  -s SLEEP_RANGE, --sleep-range SLEEP_RANGE
                        in seconds, eg. 0.5, or a random range '0.5,480'
                        (default: 0.5)
  -m MIN_EXTENT, --min-extent MIN_EXTENT
                        Minimum contiguous free range to discard, in bytes,
                        which is rounded up to the filesystem block size.
                        (default: 16MiB)
  -n, --for-machine     no thousands separators for bytes in the output
                        (default: False)
  -v, --verbose

Some space may be trimmed more than once due to the limitations of fstrim, and
the reported amount of discarded bytes could be inflated. It intends to leave
some free IO bandwith to allow the normal WRITE requests get through to the
backend block device. A plain fstrim might initiate intensive DISCARD
requests, saturate IO, cause the long freeze, and harm the critical service in
the end.
